package org.example.c二叉树;

public class c0二叉树说明 {

    /**
     * !二叉树具有以下特点：
     * 每个节点最多有两个子节点，分别称为左子节点和右子节点。
     * 左子树和右子树也是二叉树，它们的结构与父节点类似。
     * 二叉树的顺序不固定，可以是任意形状。
     */
    public void test1(){}

    /**
     * !两种特殊形式:
     *
     * 满二叉树
     * <img src="../z-img/img3.png" alt="图片描述" width="300" height="200">
     *
     * 如果该二叉树的所有叶子节点都在最后一层
     * 并且结点总数= 2^n -1,n 为层数，称为满二又树。
     */
    public void test2(){}

    /**
     * 完全二叉树
     * 完全二叉树只需保证最后一个节点之前的节点都齐全即可。
     * <img src="../z-img/img4.png" alt="图片描述" width="300" height="200">
     *
     *
     */
    public void test3(){}

    /**
     * 二叉搜索树：
     * 左子树中的所有节点的值都小于该节点的值
     * 右子树中的所有节点的值都大于（或等于）该节点的值
     */
    public void test4(){}
}
